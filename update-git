#!/bin/sh

# update-git [--branch name] [--remote name] [dir]

TAG="update-git"

branch="main"
remote="origin"
dir=$(dirname "$0")

while [ $# -ne 0 ]; do
  case "$1" in
    --branch)
      branch="$2"
      shift 2
      ;;
    --remote)
      remote="$2"
      shift 2
      ;;
    *)
      dir="$1"
      shift
      ;;
  esac
done

if ! cd "$dir"; then
  printf '{"status":"error","dir":"%s","error":"%s"}' "$dir" "can't cd to $dir" | logger -p user.err -t "$TAG"
  exit 1
fi

if ! out=$( (git fetch "$remote") 2>&1 ); then
  printf '{"status":"error","dir":"%s","error":"%s"}' "$dir" "$out" | logger -p user.err -t "$TAG"
  exit 1
fi

if ! out=$( (git verify-commit "$remote/$branch") 2>&1 ); then
  printf '{"status":"error","dir":"%s","sha":"%s","error":"%s"}' "$dir" "$(git rev-parse --short "$remote/$branch")" "$remote/$branch does not have a valid signature" | logger -p user.err -t "$TAG"
  exit 1
fi

if ! out=$( (git checkout "$branch" && git reset --hard "$remote/$branch") 2>&1 ); then
  printf '{"status":"error","dir":"%s","sha":"%s","error":"%s"}' "$dir" "$(git rev-parse --short "$remote/$branch")" "$out" | logger -p user.err -t "$TAG"
  exit 1
else
  printf '{"status":"success","dir":"%s","sha":"%s"}' "$dir" "$(git rev-parse --short HEAD)" | logger -p user.info -t "$TAG"
fi
